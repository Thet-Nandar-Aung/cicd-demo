name: Java CI with Maven
'on':
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: temurin
          cache: maven
      - name: Run Test with Maven
        run: mvn -B test
  sonar:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: temurin
          cache: maven
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: '${{ runner.os }}-sonar'
          restore-keys: '${{ runner.os }}-sonar'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: '${{ runner.os }}-m2-${{ hashFiles(''**/pom.xml'') }}'
          restore-keys: '${{ runner.os }}-m2'
      - name: Build and analyze on SonarCloud
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          SONAR_TOKEN: '${{ secrets.SONAR_TOKEN }}'
        run: >-
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=ndr1_cicd-demo
  snyk:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Install Snyk CLI
        run: |
          npm install -g snyk
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: '${{ secrets.SNYK_TOKEN }}'
        with:
          args: '--sarif-file-output=snyk.sarif'
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
  build:
      needs: sonar
      runs-on: ubuntu-latest
      name: Build
      steps:
        - uses: actions/checkout@v3
        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: temurin
            cache: maven
        - name: Cache Maven packages
          uses: actions/cache@v1
          with:
            path: ~/.m2
            key: '${{ runner.os }}-m2-${{ hashFiles(''**/pom.xml'') }}'
            restore-keys: '${{ runner.os }}-m2'
        - name: Build with Maven
          run: mvn -B package --file pom.xml
        - name: Upload JAR
          uses: actions/upload-artifact@v2
          with:
            name: artifact
            path: target/cicd-demo-0.0.1-SNAPSHOT.jar
  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Download JAR
        uses: actions/download-artifact@v2
        with:
          name: artifact
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v13
        with:
          aws_access_key: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws_secret_key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          use_existing_version_if_available: true
          application_name: Spring-Boot-DataRest
          environment_name: Spring-Boot-DataRest-env
          version_label: '${{github.SHA}}'
          region: ap-southeast-1
          deployment_package: cicd-demo-0.0.1-SNAPSHOT.jar
